$date
	Sat Oct 10 21:00:52 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench_alarm $end
$var wire 1 ! y $end
$var reg 1 " a $end
$scope module alarm $end
$var wire 1 " a $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 ! y $end
$var reg 2 % nextstate [1:0] $end
$var reg 2 & state [1:0] $end
$upscope $end
$upscope $end
$scope module testbench_engine $end
$var wire 2 ' state_out [1:0] $end
$var reg 1 ( b_in $end
$var reg 1 ) f_in $end
$scope module engine $end
$var wire 1 ( b_in $end
$var wire 1 # clk $end
$var wire 1 ) f_in $end
$var wire 1 $ reset $end
$var wire 2 * state_out [1:0] $end
$var wire 1 + f_out $end
$var wire 1 , b_out $end
$var reg 2 - nextstate [1:0] $end
$var reg 2 . state [1:0] $end
$scope module ab $end
$var wire 1 ( a $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 , y $end
$var reg 1 / nextstate $end
$var reg 1 0 state $end
$upscope $end
$scope module af $end
$var wire 1 ) a $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 + y $end
$var reg 1 1 nextstate $end
$var reg 1 2 state $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench_movement $end
$var wire 3 3 state_out [2:0] $end
$var reg 1 4 l_in $end
$var reg 1 5 r_in $end
$scope module left_right $end
$var wire 1 # clk $end
$var wire 1 4 l_in $end
$var wire 1 5 r_in $end
$var wire 1 $ reset $end
$var wire 3 6 state_out [2:0] $end
$var wire 1 7 r_out $end
$var wire 1 8 l_out $end
$var reg 3 9 nextstate [2:0] $end
$var reg 3 : state [2:0] $end
$scope module al $end
$var wire 1 4 a $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 8 y $end
$var reg 1 ; nextstate $end
$var reg 1 < state $end
$upscope $end
$scope module ar $end
$var wire 1 5 a $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 7 y $end
$var reg 1 = nextstate $end
$var reg 1 > state $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x>
x=
x<
x;
bx :
bx 9
x8
x7
bx 6
x5
x4
bx 3
x2
x1
x0
x/
bx .
bx -
x,
x+
bx *
x)
x(
bx '
bx &
bx %
0$
1#
0"
0!
$end
#5
0/
01
b0 -
0;
0=
b0 9
b0 %
00
02
b0 '
b0 *
b0 .
0<
0>
b0 3
b0 6
b0 :
b0 &
1$
0#
#10
1#
#15
0#
0$
#20
1#
#25
b1 %
0#
1"
#30
b10 %
b1 &
1#
#35
0#
#40
b11 %
b10 &
1#
#45
0#
#50
b10 %
1!
b11 &
1#
#55
0#
#60
b11 %
0!
b10 &
1#
#65
0#
#70
b10 %
1!
b11 &
1#
#75
0#
#80
b11 %
0!
b10 &
1#
#85
0#
#90
b10 %
1!
b11 &
1#
#95
0#
#100
b11 %
0!
b10 &
1#
#105
0#
#110
b10 %
1!
b11 &
1#
#115
0#
#120
b11 %
0!
b10 &
1#
#125
b0 %
0#
0"
#130
b0 &
1#
#135
0#
#140
1#
#145
0#
#150
07
08
1#
05
04
#155
0#
1$
#160
1#
#165
0#
0$
#170
1#
#175
b1 9
18
1;
0#
14
#180
08
b1 9
b1 3
b1 6
b1 :
1<
1#
#185
0;
0#
04
#190
0<
1#
#195
b10 9
18
1;
0#
14
#200
08
b10 9
b10 3
b10 6
b10 :
1<
1#
#205
0;
0#
04
#210
0<
1#
#215
b11 9
18
1;
0#
14
#220
08
b11 3
b11 6
b11 :
1<
1#
#225
0;
0#
04
#230
0<
1#
#235
18
1;
0#
14
#240
08
1<
1#
#245
0;
0#
04
#250
0<
1#
#255
b10 9
17
1=
0#
15
#260
07
b10 9
b10 3
b10 6
b10 :
1>
1#
#265
0=
0#
05
#270
0>
1#
#275
b1 9
17
1=
0#
15
#280
07
b1 9
b1 3
b1 6
b1 :
1>
1#
#285
0=
0#
05
#290
0>
1#
#295
b0 9
17
1=
0#
15
#300
07
b0 9
b0 3
b0 6
b0 :
1>
1#
#305
0=
0#
05
#310
0>
1#
#315
b100 9
17
1=
0#
15
#320
07
b100 9
b100 3
b100 6
b100 :
1>
1#
#325
0=
0#
05
#330
0>
1#
#335
b101 9
17
1=
0#
15
#340
07
b101 9
b101 3
b101 6
b101 :
1>
1#
#345
0=
0#
05
#350
0>
1#
#355
b110 9
17
1=
0#
15
#360
07
b110 3
b110 6
b110 :
1>
1#
#365
0=
0#
05
#370
0>
1#
#375
17
1=
0#
15
#380
07
1>
1#
#385
0=
0#
05
#390
0>
1#
#395
0#
#400
0+
0,
1#
0)
0(
#405
b0 9
b0 3
b0 6
b0 :
0#
1$
#410
1#
#415
0#
0$
#420
1#
#425
b10 -
1,
1/
0#
1(
#430
0,
b10 '
b10 *
b10 .
10
1#
#435
0/
0#
0(
#440
00
1#
#445
1,
1/
0#
1(
#450
0,
10
1#
#455
0/
0#
0(
#460
00
1#
#465
b0 -
1+
11
0#
1)
#470
0+
b0 -
b0 '
b0 *
b0 .
12
1#
#475
01
0#
0)
#480
02
1#
#485
b1 -
1+
11
0#
1)
#490
0+
b1 -
b1 '
b1 *
b1 .
12
1#
#495
01
0#
0)
#500
02
1#
#505
b11 -
1+
11
0#
1)
#510
0+
b11 '
b11 *
b11 .
12
1#
#515
01
0#
0)
#520
02
1#
#525
1+
11
0#
1)
#530
0+
12
1#
#535
01
0#
0)
#540
02
1#
#545
0#
#550
1#
#555
0#
#560
1#
#565
0#
